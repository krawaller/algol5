import fs from "fs-extra";
import path from "path";
import prettier from "prettier";
import allMeta from "../../games/dist/meta";

const gameSlug2id = (gameSlug: string) => {
  const meta = Object.values(allMeta).find(meta => meta.slug === gameSlug);
  if (meta) return meta.id;
  throw new Error(`Failed to find game for gameslug ${gameSlug}`);
};

const newsDir = path.join(__dirname, "../../content/dist/news");
const allNews = fs.readdirSync(newsDir).filter(f => f != ".DS_Store");

// Build game2news db
const gameLinksFinder = /data-algollink="\/games\/[^"]+"/g;
const idExtracter = /"\/games\/([^"]+)"/;

const news2games: Record<string, string[]> = {};
const games2news: Record<string, string[]> = {};
for (const n of allNews) {
  const source = path.join(newsDir, n, "news.html");
  const content = fs.readFileSync(source).toString();
  for (const hit of content.match(gameLinksFinder) || []) {
    const [, slug] = hit.match(idExtracter) || [];
    if (slug) {
      const id = gameSlug2id(slug);
      if (!news2games[n]) news2games[n] = [];
      if (!news2games[n].includes(id)) news2games[n].push(id);
      if (!games2news[id]) games2news[id] = [];
      if (!games2news[id].includes(n)) games2news[id].push(n);
    }
  }
}
const out = path.join(__dirname, "../dist/relations");
fs.ensureDirSync(out);

const games2newsCode = `
    // Generated by 'npm run buildRelations'

    export const games2news = ${JSON.stringify(games2news)};
    export default games2news;
  `;
fs.writeFileSync(
  path.join(out, "games2news.ts"),
  prettier.format(games2newsCode, { filepath: "foo.ts" })
);
const news2gamesCode = `
    // Generated by 'npm run buildRelations'

    export const news2games = ${JSON.stringify(news2games)};
    export default news2games;
  `;
fs.writeFileSync(
  path.join(out, "news2games.ts"),
  prettier.format(news2gamesCode, { filepath: "foo.ts" })
);
